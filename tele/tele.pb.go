// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tele.proto

package tele

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Priority int32

const (
	Priority_Default    Priority = 0
	Priority_Now        Priority = 1
	Priority_IdleEngine Priority = 2
	Priority_IdleUser   Priority = 4
)

var Priority_name = map[int32]string{
	0: "Default",
	1: "Now",
	2: "IdleEngine",
	4: "IdleUser",
}

var Priority_value = map[string]int32{
	"Default":    0,
	"Now":        1,
	"IdleEngine": 2,
	"IdleUser":   4,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}

func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{0}
}

type CmdReplay int32

const (
	CmdReplay_nothing  CmdReplay = 0
	CmdReplay_accepted CmdReplay = 1
	CmdReplay_done     CmdReplay = 2
	CmdReplay_busy     CmdReplay = 3
	CmdReplay_error    CmdReplay = 4
)

var CmdReplay_name = map[int32]string{
	0: "nothing",
	1: "accepted",
	2: "done",
	3: "busy",
	4: "error",
}

var CmdReplay_value = map[string]int32{
	"nothing":  0,
	"accepted": 1,
	"done":     2,
	"busy":     3,
	"error":    4,
}

func (x CmdReplay) String() string {
	return proto.EnumName(CmdReplay_name, int32(x))
}

func (CmdReplay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1}
}

type CookReplay int32

const (
	CookReplay_cookNothing      CookReplay = 0
	CookReplay_cookStart        CookReplay = 1
	CookReplay_cookFinish       CookReplay = 2
	CookReplay_cookInaccessible CookReplay = 3
	CookReplay_cookOverdraft    CookReplay = 4
	CookReplay_cookError        CookReplay = 5
	CookReplay_vmcbusy          CookReplay = 6
	CookReplay_waitPay          CookReplay = 7
)

var CookReplay_name = map[int32]string{
	0: "cookNothing",
	1: "cookStart",
	2: "cookFinish",
	3: "cookInaccessible",
	4: "cookOverdraft",
	5: "cookError",
	6: "vmcbusy",
	7: "waitPay",
}

var CookReplay_value = map[string]int32{
	"cookNothing":      0,
	"cookStart":        1,
	"cookFinish":       2,
	"cookInaccessible": 3,
	"cookOverdraft":    4,
	"cookError":        5,
	"vmcbusy":          6,
	"waitPay":          7,
}

func (x CookReplay) String() string {
	return proto.EnumName(CookReplay_name, int32(x))
}

func (CookReplay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2}
}

// ----------
type State int32

const (
	State_Invalid                   State = 0
	State_Boot                      State = 1
	State_Nominal                   State = 2
	State_Client                    State = 3
	State_Broken                    State = 4
	State_Service                   State = 5
	State_Lock                      State = 6
	State_Process                   State = 7
	State_TemperatureProblem        State = 8
	State_Shutdown                  State = 9
	State_RemoteControl             State = 10
	State_WaitingForExternalPayment State = 11
	State_RequestState              State = 64
)

var State_name = map[int32]string{
	0:  "Invalid",
	1:  "Boot",
	2:  "Nominal",
	3:  "Client",
	4:  "Broken",
	5:  "Service",
	6:  "Lock",
	7:  "Process",
	8:  "TemperatureProblem",
	9:  "Shutdown",
	10: "RemoteControl",
	11: "WaitingForExternalPayment",
	64: "RequestState",
}

var State_value = map[string]int32{
	"Invalid":                   0,
	"Boot":                      1,
	"Nominal":                   2,
	"Client":                    3,
	"Broken":                    4,
	"Service":                   5,
	"Lock":                      6,
	"Process":                   7,
	"TemperatureProblem":        8,
	"Shutdown":                  9,
	"RemoteControl":             10,
	"WaitingForExternalPayment": 11,
	"RequestState":              64,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{3}
}

type PaymentMethod int32

const (
	PaymentMethod_Nothing  PaymentMethod = 0
	PaymentMethod_Cash     PaymentMethod = 1
	PaymentMethod_Cashless PaymentMethod = 2
	PaymentMethod_Gift     PaymentMethod = 3
	PaymentMethod_Balance  PaymentMethod = 4
)

var PaymentMethod_name = map[int32]string{
	0: "Nothing",
	1: "Cash",
	2: "Cashless",
	3: "Gift",
	4: "Balance",
}

var PaymentMethod_value = map[string]int32{
	"Nothing":  0,
	"Cash":     1,
	"Cashless": 2,
	"Gift":     3,
	"Balance":  4,
}

func (x PaymentMethod) String() string {
	return proto.EnumName(PaymentMethod_name, int32(x))
}

func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{4}
}

type OwnerType int32

const (
	OwnerType_noOwnerType    OwnerType = 0
	OwnerType_telegramUser   OwnerType = 1
	OwnerType_qrCashLessUser OwnerType = 2
)

var OwnerType_name = map[int32]string{
	0: "noOwnerType",
	1: "telegramUser",
	2: "qrCashLessUser",
}

var OwnerType_value = map[string]int32{
	"noOwnerType":    0,
	"telegramUser":   1,
	"qrCashLessUser": 2,
}

func (x OwnerType) String() string {
	return proto.EnumName(OwnerType_name, int32(x))
}

func (OwnerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{5}
}

type OrderStatus int32

const (
	OrderStatus_noStatus              OrderStatus = 0
	OrderStatus_executionStart        OrderStatus = 1
	OrderStatus_complete              OrderStatus = 2
	OrderStatus_overdraft             OrderStatus = 3
	OrderStatus_executionInaccessible OrderStatus = 4
	OrderStatus_orderError            OrderStatus = 5
	OrderStatus_robotIsBusy           OrderStatus = 6
	OrderStatus_waitingForPayment     OrderStatus = 7
	OrderStatus_doSelected            OrderStatus = 64
	OrderStatus_doTransferred         OrderStatus = 65
)

var OrderStatus_name = map[int32]string{
	0:  "noStatus",
	1:  "executionStart",
	2:  "complete",
	3:  "overdraft",
	4:  "executionInaccessible",
	5:  "orderError",
	6:  "robotIsBusy",
	7:  "waitingForPayment",
	64: "doSelected",
	65: "doTransferred",
}

var OrderStatus_value = map[string]int32{
	"noStatus":              0,
	"executionStart":        1,
	"complete":              2,
	"overdraft":             3,
	"executionInaccessible": 4,
	"orderError":            5,
	"robotIsBusy":           6,
	"waitingForPayment":     7,
	"doSelected":            64,
	"doTransferred":         65,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{6}
}

type MessageType int32

const (
	MessageType_invalid        MessageType = 0
	MessageType_showQR         MessageType = 1
	MessageType_makeOrder      MessageType = 2
	MessageType_executeCommand MessageType = 3
)

var MessageType_name = map[int32]string{
	0: "invalid",
	1: "showQR",
	2: "makeOrder",
	3: "executeCommand",
}

var MessageType_value = map[string]int32{
	"invalid":        0,
	"showQR":         1,
	"makeOrder":      2,
	"executeCommand": 3,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{7}
}

type ShowQR_QRType int32

const (
	ShowQR_invalid        ShowQR_QRType = 0
	ShowQR_receipt        ShowQR_QRType = 1
	ShowQR_order          ShowQR_QRType = 2
	ShowQR_errorOverdraft ShowQR_QRType = 3
	ShowQR_error          ShowQR_QRType = 4
)

var ShowQR_QRType_name = map[int32]string{
	0: "invalid",
	1: "receipt",
	2: "order",
	3: "errorOverdraft",
	4: "error",
}

var ShowQR_QRType_value = map[string]int32{
	"invalid":        0,
	"receipt":        1,
	"order":          2,
	"errorOverdraft": 3,
	"error":          4,
}

func (x ShowQR_QRType) String() string {
	return proto.EnumName(ShowQR_QRType_name, int32(x))
}

func (ShowQR_QRType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{8, 0}
}

type Inventory struct {
	Stocks               []*Inventory_StockItem `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Inventory) Reset()         { *m = Inventory{} }
func (m *Inventory) String() string { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()    {}
func (*Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{0}
}

func (m *Inventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory.Unmarshal(m, b)
}
func (m *Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory.Marshal(b, m, deterministic)
}
func (m *Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory.Merge(m, src)
}
func (m *Inventory) XXX_Size() int {
	return xxx_messageInfo_Inventory.Size(m)
}
func (m *Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory proto.InternalMessageInfo

func (m *Inventory) GetStocks() []*Inventory_StockItem {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type Inventory_StockItem struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Hopper               int32    `protobuf:"varint,4,opt,name=hopper,proto3" json:"hopper,omitempty"`
	Valuef               float32  `protobuf:"fixed32,5,opt,name=valuef,proto3" json:"valuef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inventory_StockItem) Reset()         { *m = Inventory_StockItem{} }
func (m *Inventory_StockItem) String() string { return proto.CompactTextString(m) }
func (*Inventory_StockItem) ProtoMessage()    {}
func (*Inventory_StockItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{0, 0}
}

func (m *Inventory_StockItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory_StockItem.Unmarshal(m, b)
}
func (m *Inventory_StockItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory_StockItem.Marshal(b, m, deterministic)
}
func (m *Inventory_StockItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory_StockItem.Merge(m, src)
}
func (m *Inventory_StockItem) XXX_Size() int {
	return xxx_messageInfo_Inventory_StockItem.Size(m)
}
func (m *Inventory_StockItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory_StockItem.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory_StockItem proto.InternalMessageInfo

func (m *Inventory_StockItem) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Inventory_StockItem) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Inventory_StockItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Inventory_StockItem) GetHopper() int32 {
	if m != nil {
		return m.Hopper
	}
	return 0
}

func (m *Inventory_StockItem) GetValuef() float32 {
	if m != nil {
		return m.Valuef
	}
	return 0
}

type Telemetry struct {
	VmId                 int32                  `protobuf:"varint,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Time                 int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Error                *Telemetry_Error       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Inventory            *Inventory             `protobuf:"bytes,4,opt,name=inventory,proto3" json:"inventory,omitempty"`
	MoneyCashbox         *Telemetry_Money       `protobuf:"bytes,5,opt,name=money_cashbox,json=moneyCashbox,proto3" json:"money_cashbox,omitempty"`
	Transaction          *Telemetry_Transaction `protobuf:"bytes,6,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Stat                 *Telemetry_Stat        `protobuf:"bytes,7,opt,name=stat,proto3" json:"stat,omitempty"`
	MoneySave            *Telemetry_Money       `protobuf:"bytes,8,opt,name=money_save,json=moneySave,proto3" json:"money_save,omitempty"`
	MoneyChange          *Telemetry_Money       `protobuf:"bytes,9,opt,name=money_change,json=moneyChange,proto3" json:"money_change,omitempty"`
	AtService            bool                   `protobuf:"varint,16,opt,name=at_service,json=atService,proto3" json:"at_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Telemetry) Reset()         { *m = Telemetry{} }
func (m *Telemetry) String() string { return proto.CompactTextString(m) }
func (*Telemetry) ProtoMessage()    {}
func (*Telemetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1}
}

func (m *Telemetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry.Unmarshal(m, b)
}
func (m *Telemetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry.Marshal(b, m, deterministic)
}
func (m *Telemetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry.Merge(m, src)
}
func (m *Telemetry) XXX_Size() int {
	return xxx_messageInfo_Telemetry.Size(m)
}
func (m *Telemetry) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry proto.InternalMessageInfo

func (m *Telemetry) GetVmId() int32 {
	if m != nil {
		return m.VmId
	}
	return 0
}

func (m *Telemetry) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Telemetry) GetError() *Telemetry_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Telemetry) GetInventory() *Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

func (m *Telemetry) GetMoneyCashbox() *Telemetry_Money {
	if m != nil {
		return m.MoneyCashbox
	}
	return nil
}

func (m *Telemetry) GetTransaction() *Telemetry_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *Telemetry) GetStat() *Telemetry_Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *Telemetry) GetMoneySave() *Telemetry_Money {
	if m != nil {
		return m.MoneySave
	}
	return nil
}

func (m *Telemetry) GetMoneyChange() *Telemetry_Money {
	if m != nil {
		return m.MoneyChange
	}
	return nil
}

func (m *Telemetry) GetAtService() bool {
	if m != nil {
		return m.AtService
	}
	return false
}

type Telemetry_Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Count                uint32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Telemetry_Error) Reset()         { *m = Telemetry_Error{} }
func (m *Telemetry_Error) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Error) ProtoMessage()    {}
func (*Telemetry_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1, 0}
}

func (m *Telemetry_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Error.Unmarshal(m, b)
}
func (m *Telemetry_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Error.Marshal(b, m, deterministic)
}
func (m *Telemetry_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Error.Merge(m, src)
}
func (m *Telemetry_Error) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Error.Size(m)
}
func (m *Telemetry_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Error proto.InternalMessageInfo

func (m *Telemetry_Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Telemetry_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Telemetry_Error) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Telemetry_Money struct {
	TotalBills           uint32            `protobuf:"varint,1,opt,name=total_bills,json=totalBills,proto3" json:"total_bills,omitempty"`
	TotalCoins           uint32            `protobuf:"varint,2,opt,name=total_coins,json=totalCoins,proto3" json:"total_coins,omitempty"`
	Bills                map[uint32]uint32 `protobuf:"bytes,3,rep,name=bills,proto3" json:"bills,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Coins                map[uint32]uint32 `protobuf:"bytes,4,rep,name=coins,proto3" json:"coins,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Telemetry_Money) Reset()         { *m = Telemetry_Money{} }
func (m *Telemetry_Money) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Money) ProtoMessage()    {}
func (*Telemetry_Money) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1, 1}
}

func (m *Telemetry_Money) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Money.Unmarshal(m, b)
}
func (m *Telemetry_Money) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Money.Marshal(b, m, deterministic)
}
func (m *Telemetry_Money) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Money.Merge(m, src)
}
func (m *Telemetry_Money) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Money.Size(m)
}
func (m *Telemetry_Money) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Money.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Money proto.InternalMessageInfo

func (m *Telemetry_Money) GetTotalBills() uint32 {
	if m != nil {
		return m.TotalBills
	}
	return 0
}

func (m *Telemetry_Money) GetTotalCoins() uint32 {
	if m != nil {
		return m.TotalCoins
	}
	return 0
}

func (m *Telemetry_Money) GetBills() map[uint32]uint32 {
	if m != nil {
		return m.Bills
	}
	return nil
}

func (m *Telemetry_Money) GetCoins() map[uint32]uint32 {
	if m != nil {
		return m.Coins
	}
	return nil
}

type Telemetry_Transaction struct {
	Code                 string        `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Options              []int32       `protobuf:"varint,2,rep,packed,name=options,proto3" json:"options,omitempty"`
	Price                uint32        `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PaymentMethod        PaymentMethod `protobuf:"varint,4,opt,name=payment_method,json=paymentMethod,proto3,enum=tele.PaymentMethod" json:"payment_method,omitempty"`
	CreditBills          uint32        `protobuf:"varint,5,opt,name=credit_bills,json=creditBills,proto3" json:"credit_bills,omitempty"`
	CreditCoins          uint32        `protobuf:"varint,6,opt,name=credit_coins,json=creditCoins,proto3" json:"credit_coins,omitempty"`
	Spent                *Inventory    `protobuf:"bytes,7,opt,name=spent,proto3" json:"spent,omitempty"`
	Executer             int64         `protobuf:"varint,8,opt,name=executer,proto3" json:"executer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Telemetry_Transaction) Reset()         { *m = Telemetry_Transaction{} }
func (m *Telemetry_Transaction) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Transaction) ProtoMessage()    {}
func (*Telemetry_Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1, 2}
}

func (m *Telemetry_Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Transaction.Unmarshal(m, b)
}
func (m *Telemetry_Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Transaction.Marshal(b, m, deterministic)
}
func (m *Telemetry_Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Transaction.Merge(m, src)
}
func (m *Telemetry_Transaction) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Transaction.Size(m)
}
func (m *Telemetry_Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Transaction proto.InternalMessageInfo

func (m *Telemetry_Transaction) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Telemetry_Transaction) GetOptions() []int32 {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Telemetry_Transaction) GetPrice() uint32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Telemetry_Transaction) GetPaymentMethod() PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return PaymentMethod_Nothing
}

func (m *Telemetry_Transaction) GetCreditBills() uint32 {
	if m != nil {
		return m.CreditBills
	}
	return 0
}

func (m *Telemetry_Transaction) GetCreditCoins() uint32 {
	if m != nil {
		return m.CreditCoins
	}
	return 0
}

func (m *Telemetry_Transaction) GetSpent() *Inventory {
	if m != nil {
		return m.Spent
	}
	return nil
}

func (m *Telemetry_Transaction) GetExecuter() int64 {
	if m != nil {
		return m.Executer
	}
	return 0
}

type Telemetry_Stat struct {
	Activity             uint32            `protobuf:"varint,1,opt,name=activity,proto3" json:"activity,omitempty"`
	BillRejected         map[uint32]uint32 `protobuf:"bytes,16,rep,name=bill_rejected,json=billRejected,proto3" json:"bill_rejected,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CoinRejected         map[uint32]uint32 `protobuf:"bytes,17,rep,name=coin_rejected,json=coinRejected,proto3" json:"coin_rejected,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CoinSlug             uint32            `protobuf:"varint,18,opt,name=coin_slug,json=coinSlug,proto3" json:"coin_slug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Telemetry_Stat) Reset()         { *m = Telemetry_Stat{} }
func (m *Telemetry_Stat) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Stat) ProtoMessage()    {}
func (*Telemetry_Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{1, 3}
}

func (m *Telemetry_Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Stat.Unmarshal(m, b)
}
func (m *Telemetry_Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Stat.Marshal(b, m, deterministic)
}
func (m *Telemetry_Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Stat.Merge(m, src)
}
func (m *Telemetry_Stat) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Stat.Size(m)
}
func (m *Telemetry_Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Stat proto.InternalMessageInfo

func (m *Telemetry_Stat) GetActivity() uint32 {
	if m != nil {
		return m.Activity
	}
	return 0
}

func (m *Telemetry_Stat) GetBillRejected() map[uint32]uint32 {
	if m != nil {
		return m.BillRejected
	}
	return nil
}

func (m *Telemetry_Stat) GetCoinRejected() map[uint32]uint32 {
	if m != nil {
		return m.CoinRejected
	}
	return nil
}

func (m *Telemetry_Stat) GetCoinSlug() uint32 {
	if m != nil {
		return m.CoinSlug
	}
	return 0
}

type Command struct {
	Executer int64 `protobuf:"varint,5,opt,name=executer,proto3" json:"executer,omitempty"`
	Lock     bool  `protobuf:"varint,6,opt,name=lock,proto3" json:"lock,omitempty"`
	// Types that are valid to be assigned to Task:
	//	*Command_Report
	//	*Command_GetState
	//	*Command_Exec
	//	*Command_SetInventory
	//	*Command_SetConfig
	//	*Command_Stop
	//	*Command_Show_QR
	//	*Command_ValidateCode
	//	*Command_Cook
	Task                 isCommand_Task `protobuf_oneof:"task"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetExecuter() int64 {
	if m != nil {
		return m.Executer
	}
	return 0
}

func (m *Command) GetLock() bool {
	if m != nil {
		return m.Lock
	}
	return false
}

type isCommand_Task interface {
	isCommand_Task()
}

type Command_Report struct {
	Report *Command_ArgReport `protobuf:"bytes,16,opt,name=report,proto3,oneof"`
}

type Command_GetState struct {
	GetState *Command_ArgGetState `protobuf:"bytes,17,opt,name=getState,proto3,oneof"`
}

type Command_Exec struct {
	Exec *Command_ArgExec `protobuf:"bytes,18,opt,name=exec,proto3,oneof"`
}

type Command_SetInventory struct {
	SetInventory *Command_ArgSetInventory `protobuf:"bytes,19,opt,name=set_inventory,json=setInventory,proto3,oneof"`
}

type Command_SetConfig struct {
	SetConfig *Command_ArgSetConfig `protobuf:"bytes,20,opt,name=set_config,json=setConfig,proto3,oneof"`
}

type Command_Stop struct {
	Stop *Command_ArgSendStatus `protobuf:"bytes,21,opt,name=stop,proto3,oneof"`
}

type Command_Show_QR struct {
	Show_QR *Command_ArgShowQR `protobuf:"bytes,22,opt,name=show_QR,json=showQR,proto3,oneof"`
}

type Command_ValidateCode struct {
	ValidateCode *Command_ArgValidateCode `protobuf:"bytes,23,opt,name=validate_code,json=validateCode,proto3,oneof"`
}

type Command_Cook struct {
	Cook *Command_ArgCook `protobuf:"bytes,24,opt,name=cook,proto3,oneof"`
}

func (*Command_Report) isCommand_Task() {}

func (*Command_GetState) isCommand_Task() {}

func (*Command_Exec) isCommand_Task() {}

func (*Command_SetInventory) isCommand_Task() {}

func (*Command_SetConfig) isCommand_Task() {}

func (*Command_Stop) isCommand_Task() {}

func (*Command_Show_QR) isCommand_Task() {}

func (*Command_ValidateCode) isCommand_Task() {}

func (*Command_Cook) isCommand_Task() {}

func (m *Command) GetTask() isCommand_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Command) GetReport() *Command_ArgReport {
	if x, ok := m.GetTask().(*Command_Report); ok {
		return x.Report
	}
	return nil
}

func (m *Command) GetGetState() *Command_ArgGetState {
	if x, ok := m.GetTask().(*Command_GetState); ok {
		return x.GetState
	}
	return nil
}

func (m *Command) GetExec() *Command_ArgExec {
	if x, ok := m.GetTask().(*Command_Exec); ok {
		return x.Exec
	}
	return nil
}

func (m *Command) GetSetInventory() *Command_ArgSetInventory {
	if x, ok := m.GetTask().(*Command_SetInventory); ok {
		return x.SetInventory
	}
	return nil
}

func (m *Command) GetSetConfig() *Command_ArgSetConfig {
	if x, ok := m.GetTask().(*Command_SetConfig); ok {
		return x.SetConfig
	}
	return nil
}

func (m *Command) GetStop() *Command_ArgSendStatus {
	if x, ok := m.GetTask().(*Command_Stop); ok {
		return x.Stop
	}
	return nil
}

func (m *Command) GetShow_QR() *Command_ArgShowQR {
	if x, ok := m.GetTask().(*Command_Show_QR); ok {
		return x.Show_QR
	}
	return nil
}

func (m *Command) GetValidateCode() *Command_ArgValidateCode {
	if x, ok := m.GetTask().(*Command_ValidateCode); ok {
		return x.ValidateCode
	}
	return nil
}

func (m *Command) GetCook() *Command_ArgCook {
	if x, ok := m.GetTask().(*Command_Cook); ok {
		return x.Cook
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Command) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Command_Report)(nil),
		(*Command_GetState)(nil),
		(*Command_Exec)(nil),
		(*Command_SetInventory)(nil),
		(*Command_SetConfig)(nil),
		(*Command_Stop)(nil),
		(*Command_Show_QR)(nil),
		(*Command_ValidateCode)(nil),
		(*Command_Cook)(nil),
	}
}

type Command_ArgReport struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgReport) Reset()         { *m = Command_ArgReport{} }
func (m *Command_ArgReport) String() string { return proto.CompactTextString(m) }
func (*Command_ArgReport) ProtoMessage()    {}
func (*Command_ArgReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 0}
}

func (m *Command_ArgReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgReport.Unmarshal(m, b)
}
func (m *Command_ArgReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgReport.Marshal(b, m, deterministic)
}
func (m *Command_ArgReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgReport.Merge(m, src)
}
func (m *Command_ArgReport) XXX_Size() int {
	return xxx_messageInfo_Command_ArgReport.Size(m)
}
func (m *Command_ArgReport) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgReport.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgReport proto.InternalMessageInfo

type Command_ArgGetState struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgGetState) Reset()         { *m = Command_ArgGetState{} }
func (m *Command_ArgGetState) String() string { return proto.CompactTextString(m) }
func (*Command_ArgGetState) ProtoMessage()    {}
func (*Command_ArgGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 1}
}

func (m *Command_ArgGetState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgGetState.Unmarshal(m, b)
}
func (m *Command_ArgGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgGetState.Marshal(b, m, deterministic)
}
func (m *Command_ArgGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgGetState.Merge(m, src)
}
func (m *Command_ArgGetState) XXX_Size() int {
	return xxx_messageInfo_Command_ArgGetState.Size(m)
}
func (m *Command_ArgGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgGetState.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgGetState proto.InternalMessageInfo

type Command_ArgExec struct {
	Scenario             string   `protobuf:"bytes,1,opt,name=scenario,proto3" json:"scenario,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgExec) Reset()         { *m = Command_ArgExec{} }
func (m *Command_ArgExec) String() string { return proto.CompactTextString(m) }
func (*Command_ArgExec) ProtoMessage()    {}
func (*Command_ArgExec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 2}
}

func (m *Command_ArgExec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgExec.Unmarshal(m, b)
}
func (m *Command_ArgExec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgExec.Marshal(b, m, deterministic)
}
func (m *Command_ArgExec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgExec.Merge(m, src)
}
func (m *Command_ArgExec) XXX_Size() int {
	return xxx_messageInfo_Command_ArgExec.Size(m)
}
func (m *Command_ArgExec) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgExec.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgExec proto.InternalMessageInfo

func (m *Command_ArgExec) GetScenario() string {
	if m != nil {
		return m.Scenario
	}
	return ""
}

type Command_ArgSetInventory struct {
	New                  *Inventory `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Command_ArgSetInventory) Reset()         { *m = Command_ArgSetInventory{} }
func (m *Command_ArgSetInventory) String() string { return proto.CompactTextString(m) }
func (*Command_ArgSetInventory) ProtoMessage()    {}
func (*Command_ArgSetInventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 3}
}

func (m *Command_ArgSetInventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgSetInventory.Unmarshal(m, b)
}
func (m *Command_ArgSetInventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgSetInventory.Marshal(b, m, deterministic)
}
func (m *Command_ArgSetInventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgSetInventory.Merge(m, src)
}
func (m *Command_ArgSetInventory) XXX_Size() int {
	return xxx_messageInfo_Command_ArgSetInventory.Size(m)
}
func (m *Command_ArgSetInventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgSetInventory.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgSetInventory proto.InternalMessageInfo

func (m *Command_ArgSetInventory) GetNew() *Inventory {
	if m != nil {
		return m.New
	}
	return nil
}

type Command_ArgSetConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	New                  []byte   `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgSetConfig) Reset()         { *m = Command_ArgSetConfig{} }
func (m *Command_ArgSetConfig) String() string { return proto.CompactTextString(m) }
func (*Command_ArgSetConfig) ProtoMessage()    {}
func (*Command_ArgSetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 4}
}

func (m *Command_ArgSetConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgSetConfig.Unmarshal(m, b)
}
func (m *Command_ArgSetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgSetConfig.Marshal(b, m, deterministic)
}
func (m *Command_ArgSetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgSetConfig.Merge(m, src)
}
func (m *Command_ArgSetConfig) XXX_Size() int {
	return xxx_messageInfo_Command_ArgSetConfig.Size(m)
}
func (m *Command_ArgSetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgSetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgSetConfig proto.InternalMessageInfo

func (m *Command_ArgSetConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command_ArgSetConfig) GetNew() []byte {
	if m != nil {
		return m.New
	}
	return nil
}

type Command_ArgSendStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgSendStatus) Reset()         { *m = Command_ArgSendStatus{} }
func (m *Command_ArgSendStatus) String() string { return proto.CompactTextString(m) }
func (*Command_ArgSendStatus) ProtoMessage()    {}
func (*Command_ArgSendStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 5}
}

func (m *Command_ArgSendStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgSendStatus.Unmarshal(m, b)
}
func (m *Command_ArgSendStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgSendStatus.Marshal(b, m, deterministic)
}
func (m *Command_ArgSendStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgSendStatus.Merge(m, src)
}
func (m *Command_ArgSendStatus) XXX_Size() int {
	return xxx_messageInfo_Command_ArgSendStatus.Size(m)
}
func (m *Command_ArgSendStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgSendStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgSendStatus proto.InternalMessageInfo

type Command_ArgShowQR struct {
	Layout               string   `protobuf:"bytes,1,opt,name=layout,proto3" json:"layout,omitempty"`
	QrText               string   `protobuf:"bytes,2,opt,name=qr_text,json=qrText,proto3" json:"qr_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgShowQR) Reset()         { *m = Command_ArgShowQR{} }
func (m *Command_ArgShowQR) String() string { return proto.CompactTextString(m) }
func (*Command_ArgShowQR) ProtoMessage()    {}
func (*Command_ArgShowQR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 6}
}

func (m *Command_ArgShowQR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgShowQR.Unmarshal(m, b)
}
func (m *Command_ArgShowQR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgShowQR.Marshal(b, m, deterministic)
}
func (m *Command_ArgShowQR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgShowQR.Merge(m, src)
}
func (m *Command_ArgShowQR) XXX_Size() int {
	return xxx_messageInfo_Command_ArgShowQR.Size(m)
}
func (m *Command_ArgShowQR) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgShowQR.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgShowQR proto.InternalMessageInfo

func (m *Command_ArgShowQR) GetLayout() string {
	if m != nil {
		return m.Layout
	}
	return ""
}

func (m *Command_ArgShowQR) GetQrText() string {
	if m != nil {
		return m.QrText
	}
	return ""
}

type Command_ArgValidateCode struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgValidateCode) Reset()         { *m = Command_ArgValidateCode{} }
func (m *Command_ArgValidateCode) String() string { return proto.CompactTextString(m) }
func (*Command_ArgValidateCode) ProtoMessage()    {}
func (*Command_ArgValidateCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 7}
}

func (m *Command_ArgValidateCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgValidateCode.Unmarshal(m, b)
}
func (m *Command_ArgValidateCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgValidateCode.Marshal(b, m, deterministic)
}
func (m *Command_ArgValidateCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgValidateCode.Merge(m, src)
}
func (m *Command_ArgValidateCode) XXX_Size() int {
	return xxx_messageInfo_Command_ArgValidateCode.Size(m)
}
func (m *Command_ArgValidateCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgValidateCode.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgValidateCode proto.InternalMessageInfo

func (m *Command_ArgValidateCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type Command_ArgCook struct {
	Menucode             string        `protobuf:"bytes,1,opt,name=menucode,proto3" json:"menucode,omitempty"`
	Cream                []byte        `protobuf:"bytes,2,opt,name=cream,proto3" json:"cream,omitempty"`
	Sugar                []byte        `protobuf:"bytes,3,opt,name=sugar,proto3" json:"sugar,omitempty"`
	Balance              int32         `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
	PaymentMethod        PaymentMethod `protobuf:"varint,5,opt,name=payment_method,json=paymentMethod,proto3,enum=tele.PaymentMethod" json:"payment_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command_ArgCook) Reset()         { *m = Command_ArgCook{} }
func (m *Command_ArgCook) String() string { return proto.CompactTextString(m) }
func (*Command_ArgCook) ProtoMessage()    {}
func (*Command_ArgCook) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{2, 8}
}

func (m *Command_ArgCook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgCook.Unmarshal(m, b)
}
func (m *Command_ArgCook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgCook.Marshal(b, m, deterministic)
}
func (m *Command_ArgCook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgCook.Merge(m, src)
}
func (m *Command_ArgCook) XXX_Size() int {
	return xxx_messageInfo_Command_ArgCook.Size(m)
}
func (m *Command_ArgCook) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgCook.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgCook proto.InternalMessageInfo

func (m *Command_ArgCook) GetMenucode() string {
	if m != nil {
		return m.Menucode
	}
	return ""
}

func (m *Command_ArgCook) GetCream() []byte {
	if m != nil {
		return m.Cream
	}
	return nil
}

func (m *Command_ArgCook) GetSugar() []byte {
	if m != nil {
		return m.Sugar
	}
	return nil
}

func (m *Command_ArgCook) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Command_ArgCook) GetPaymentMethod() PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return PaymentMethod_Nothing
}

type Response struct {
	// uint32 command_id = 1;
	Error                string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data                 string     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Executer             int64      `protobuf:"varint,4,opt,name=executer,proto3" json:"executer,omitempty"`
	CmdReplay            CmdReplay  `protobuf:"varint,5,opt,name=cmd_replay,json=cmdReplay,proto3,enum=tele.CmdReplay" json:"cmd_replay,omitempty"`
	CookReplay           CookReplay `protobuf:"varint,6,opt,name=cook_replay,json=cookReplay,proto3,enum=tele.CookReplay" json:"cook_replay,omitempty"`
	ValidateReplay       uint32     `protobuf:"varint,7,opt,name=validateReplay,proto3" json:"validateReplay,omitempty"`
	INTERNALTopic        string     `protobuf:"bytes,2048,opt,name=INTERNAL_topic,json=INTERNALTopic,proto3" json:"INTERNAL_topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Response) GetExecuter() int64 {
	if m != nil {
		return m.Executer
	}
	return 0
}

func (m *Response) GetCmdReplay() CmdReplay {
	if m != nil {
		return m.CmdReplay
	}
	return CmdReplay_nothing
}

func (m *Response) GetCookReplay() CookReplay {
	if m != nil {
		return m.CookReplay
	}
	return CookReplay_cookNothing
}

func (m *Response) GetValidateReplay() uint32 {
	if m != nil {
		return m.ValidateReplay
	}
	return 0
}

func (m *Response) GetINTERNALTopic() string {
	if m != nil {
		return m.INTERNALTopic
	}
	return ""
}

type WaitingForRemotePayment struct {
	Menucode             string   `protobuf:"bytes,1,opt,name=menucode,proto3" json:"menucode,omitempty"`
	Cream                []byte   `protobuf:"bytes,2,opt,name=cream,proto3" json:"cream,omitempty"`
	Sugar                []byte   `protobuf:"bytes,3,opt,name=sugar,proto3" json:"sugar,omitempty"`
	Amount               uint32   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitingForRemotePayment) Reset()         { *m = WaitingForRemotePayment{} }
func (m *WaitingForRemotePayment) String() string { return proto.CompactTextString(m) }
func (*WaitingForRemotePayment) ProtoMessage()    {}
func (*WaitingForRemotePayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{4}
}

func (m *WaitingForRemotePayment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitingForRemotePayment.Unmarshal(m, b)
}
func (m *WaitingForRemotePayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitingForRemotePayment.Marshal(b, m, deterministic)
}
func (m *WaitingForRemotePayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitingForRemotePayment.Merge(m, src)
}
func (m *WaitingForRemotePayment) XXX_Size() int {
	return xxx_messageInfo_WaitingForRemotePayment.Size(m)
}
func (m *WaitingForRemotePayment) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitingForRemotePayment.DiscardUnknown(m)
}

var xxx_messageInfo_WaitingForRemotePayment proto.InternalMessageInfo

func (m *WaitingForRemotePayment) GetMenucode() string {
	if m != nil {
		return m.Menucode
	}
	return ""
}

func (m *WaitingForRemotePayment) GetCream() []byte {
	if m != nil {
		return m.Cream
	}
	return nil
}

func (m *WaitingForRemotePayment) GetSugar() []byte {
	if m != nil {
		return m.Sugar
	}
	return nil
}

func (m *WaitingForRemotePayment) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type FromRoboMessage struct {
	State                State         `protobuf:"varint,1,opt,name=state,proto3,enum=tele.State" json:"state,omitempty"`
	RoboTime             int64         `protobuf:"varint,2,opt,name=roboTime,proto3" json:"roboTime,omitempty"`
	Order                *Order        `protobuf:"bytes,3,opt,name=Order,proto3" json:"Order,omitempty"`
	Err                  *Err          `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	RoboHardware         *RoboHardware `protobuf:"bytes,5,opt,name=RoboHardware,proto3" json:"RoboHardware,omitempty"`
	Stock                *Stock        `protobuf:"bytes,6,opt,name=Stock,proto3" json:"Stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FromRoboMessage) Reset()         { *m = FromRoboMessage{} }
func (m *FromRoboMessage) String() string { return proto.CompactTextString(m) }
func (*FromRoboMessage) ProtoMessage()    {}
func (*FromRoboMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{5}
}

func (m *FromRoboMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FromRoboMessage.Unmarshal(m, b)
}
func (m *FromRoboMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FromRoboMessage.Marshal(b, m, deterministic)
}
func (m *FromRoboMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FromRoboMessage.Merge(m, src)
}
func (m *FromRoboMessage) XXX_Size() int {
	return xxx_messageInfo_FromRoboMessage.Size(m)
}
func (m *FromRoboMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FromRoboMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FromRoboMessage proto.InternalMessageInfo

func (m *FromRoboMessage) GetState() State {
	if m != nil {
		return m.State
	}
	return State_Invalid
}

func (m *FromRoboMessage) GetRoboTime() int64 {
	if m != nil {
		return m.RoboTime
	}
	return 0
}

func (m *FromRoboMessage) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *FromRoboMessage) GetErr() *Err {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *FromRoboMessage) GetRoboHardware() *RoboHardware {
	if m != nil {
		return m.RoboHardware
	}
	return nil
}

func (m *FromRoboMessage) GetStock() *Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

type Stock struct {
	Stocks               []*Stock_StockItem `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{6}
}

func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (m *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(m, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetStocks() []*Stock_StockItem {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type Stock_StockItem struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stock_StockItem) Reset()         { *m = Stock_StockItem{} }
func (m *Stock_StockItem) String() string { return proto.CompactTextString(m) }
func (*Stock_StockItem) ProtoMessage()    {}
func (*Stock_StockItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{6, 0}
}

func (m *Stock_StockItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock_StockItem.Unmarshal(m, b)
}
func (m *Stock_StockItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock_StockItem.Marshal(b, m, deterministic)
}
func (m *Stock_StockItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock_StockItem.Merge(m, src)
}
func (m *Stock_StockItem) XXX_Size() int {
	return xxx_messageInfo_Stock_StockItem.Size(m)
}
func (m *Stock_StockItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock_StockItem.DiscardUnknown(m)
}

var xxx_messageInfo_Stock_StockItem proto.InternalMessageInfo

func (m *Stock_StockItem) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Stock_StockItem) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Err struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Err) Reset()         { *m = Err{} }
func (m *Err) String() string { return proto.CompactTextString(m) }
func (*Err) ProtoMessage()    {}
func (*Err) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{7}
}

func (m *Err) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Err.Unmarshal(m, b)
}
func (m *Err) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Err.Marshal(b, m, deterministic)
}
func (m *Err) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Err.Merge(m, src)
}
func (m *Err) XXX_Size() int {
	return xxx_messageInfo_Err.Size(m)
}
func (m *Err) XXX_DiscardUnknown() {
	xxx_messageInfo_Err.DiscardUnknown(m)
}

var xxx_messageInfo_Err proto.InternalMessageInfo

func (m *Err) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Err) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ShowQR struct {
	QrType               ShowQR_QRType `protobuf:"varint,1,opt,name=qrType,proto3,enum=tele.ShowQR_QRType" json:"qrType,omitempty"`
	QrText               string        `protobuf:"bytes,2,opt,name=qrText,proto3" json:"qrText,omitempty"`
	DataStr              string        `protobuf:"bytes,3,opt,name=dataStr,proto3" json:"dataStr,omitempty"`
	DataInt              int32         `protobuf:"varint,4,opt,name=dataInt,proto3" json:"dataInt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ShowQR) Reset()         { *m = ShowQR{} }
func (m *ShowQR) String() string { return proto.CompactTextString(m) }
func (*ShowQR) ProtoMessage()    {}
func (*ShowQR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{8}
}

func (m *ShowQR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowQR.Unmarshal(m, b)
}
func (m *ShowQR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowQR.Marshal(b, m, deterministic)
}
func (m *ShowQR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowQR.Merge(m, src)
}
func (m *ShowQR) XXX_Size() int {
	return xxx_messageInfo_ShowQR.Size(m)
}
func (m *ShowQR) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowQR.DiscardUnknown(m)
}

var xxx_messageInfo_ShowQR proto.InternalMessageInfo

func (m *ShowQR) GetQrType() ShowQR_QRType {
	if m != nil {
		return m.QrType
	}
	return ShowQR_invalid
}

func (m *ShowQR) GetQrText() string {
	if m != nil {
		return m.QrText
	}
	return ""
}

func (m *ShowQR) GetDataStr() string {
	if m != nil {
		return m.DataStr
	}
	return ""
}

func (m *ShowQR) GetDataInt() int32 {
	if m != nil {
		return m.DataInt
	}
	return 0
}

type ToRoboMessage struct {
	Cmd                  MessageType `protobuf:"varint,1,opt,name=cmd,proto3,enum=tele.MessageType" json:"cmd,omitempty"`
	ServerTime           int64       `protobuf:"varint,2,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	MakeOrder            *Order      `protobuf:"bytes,3,opt,name=makeOrder,proto3" json:"makeOrder,omitempty"`
	ShowQR               *ShowQR     `protobuf:"bytes,4,opt,name=showQR,proto3" json:"showQR,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ToRoboMessage) Reset()         { *m = ToRoboMessage{} }
func (m *ToRoboMessage) String() string { return proto.CompactTextString(m) }
func (*ToRoboMessage) ProtoMessage()    {}
func (*ToRoboMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{9}
}

func (m *ToRoboMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToRoboMessage.Unmarshal(m, b)
}
func (m *ToRoboMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToRoboMessage.Marshal(b, m, deterministic)
}
func (m *ToRoboMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToRoboMessage.Merge(m, src)
}
func (m *ToRoboMessage) XXX_Size() int {
	return xxx_messageInfo_ToRoboMessage.Size(m)
}
func (m *ToRoboMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ToRoboMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ToRoboMessage proto.InternalMessageInfo

func (m *ToRoboMessage) GetCmd() MessageType {
	if m != nil {
		return m.Cmd
	}
	return MessageType_invalid
}

func (m *ToRoboMessage) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *ToRoboMessage) GetMakeOrder() *Order {
	if m != nil {
		return m.MakeOrder
	}
	return nil
}

func (m *ToRoboMessage) GetShowQR() *ShowQR {
	if m != nil {
		return m.ShowQR
	}
	return nil
}

type RoboHardware struct {
	Temperature          int32    `protobuf:"varint,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoboHardware) Reset()         { *m = RoboHardware{} }
func (m *RoboHardware) String() string { return proto.CompactTextString(m) }
func (*RoboHardware) ProtoMessage()    {}
func (*RoboHardware) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{10}
}

func (m *RoboHardware) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoboHardware.Unmarshal(m, b)
}
func (m *RoboHardware) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoboHardware.Marshal(b, m, deterministic)
}
func (m *RoboHardware) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoboHardware.Merge(m, src)
}
func (m *RoboHardware) XXX_Size() int {
	return xxx_messageInfo_RoboHardware.Size(m)
}
func (m *RoboHardware) XXX_DiscardUnknown() {
	xxx_messageInfo_RoboHardware.DiscardUnknown(m)
}

var xxx_messageInfo_RoboHardware proto.InternalMessageInfo

func (m *RoboHardware) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

type Order struct {
	MenuCode             string        `protobuf:"bytes,1,opt,name=menuCode,proto3" json:"menuCode,omitempty"`
	Cream                []byte        `protobuf:"bytes,2,opt,name=cream,proto3" json:"cream,omitempty"`
	Sugar                []byte        `protobuf:"bytes,3,opt,name=sugar,proto3" json:"sugar,omitempty"`
	Amount               uint32        `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	OrderStatus          OrderStatus   `protobuf:"varint,6,opt,name=orderStatus,proto3,enum=tele.OrderStatus" json:"orderStatus,omitempty"`
	PaymentMethod        PaymentMethod `protobuf:"varint,7,opt,name=paymentMethod,proto3,enum=tele.PaymentMethod" json:"paymentMethod,omitempty"`
	OwnerInt             int64         `protobuf:"varint,8,opt,name=ownerInt,proto3" json:"ownerInt,omitempty"`
	OwnerStr             string        `protobuf:"bytes,9,opt,name=ownerStr,proto3" json:"ownerStr,omitempty"`
	OwnerType            OwnerType     `protobuf:"varint,10,opt,name=ownerType,proto3,enum=tele.OwnerType" json:"ownerType,omitempty"`
	RedirectDueDate      int64         `protobuf:"varint,11,opt,name=redirectDueDate,proto3" json:"redirectDueDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0e7a136e24bc159, []int{11}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetMenuCode() string {
	if m != nil {
		return m.MenuCode
	}
	return ""
}

func (m *Order) GetCream() []byte {
	if m != nil {
		return m.Cream
	}
	return nil
}

func (m *Order) GetSugar() []byte {
	if m != nil {
		return m.Sugar
	}
	return nil
}

func (m *Order) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetOrderStatus() OrderStatus {
	if m != nil {
		return m.OrderStatus
	}
	return OrderStatus_noStatus
}

func (m *Order) GetPaymentMethod() PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return PaymentMethod_Nothing
}

func (m *Order) GetOwnerInt() int64 {
	if m != nil {
		return m.OwnerInt
	}
	return 0
}

func (m *Order) GetOwnerStr() string {
	if m != nil {
		return m.OwnerStr
	}
	return ""
}

func (m *Order) GetOwnerType() OwnerType {
	if m != nil {
		return m.OwnerType
	}
	return OwnerType_noOwnerType
}

func (m *Order) GetRedirectDueDate() int64 {
	if m != nil {
		return m.RedirectDueDate
	}
	return 0
}

func init() {
	proto.RegisterEnum("tele.Priority", Priority_name, Priority_value)
	proto.RegisterEnum("tele.CmdReplay", CmdReplay_name, CmdReplay_value)
	proto.RegisterEnum("tele.CookReplay", CookReplay_name, CookReplay_value)
	proto.RegisterEnum("tele.State", State_name, State_value)
	proto.RegisterEnum("tele.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	proto.RegisterEnum("tele.OwnerType", OwnerType_name, OwnerType_value)
	proto.RegisterEnum("tele.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("tele.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("tele.ShowQR_QRType", ShowQR_QRType_name, ShowQR_QRType_value)
	proto.RegisterType((*Inventory)(nil), "tele.Inventory")
	proto.RegisterType((*Inventory_StockItem)(nil), "tele.Inventory.StockItem")
	proto.RegisterType((*Telemetry)(nil), "tele.Telemetry")
	proto.RegisterType((*Telemetry_Error)(nil), "tele.Telemetry.Error")
	proto.RegisterType((*Telemetry_Money)(nil), "tele.Telemetry.Money")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Money.BillsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Money.CoinsEntry")
	proto.RegisterType((*Telemetry_Transaction)(nil), "tele.Telemetry.Transaction")
	proto.RegisterType((*Telemetry_Stat)(nil), "tele.Telemetry.Stat")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Stat.BillRejectedEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Stat.CoinRejectedEntry")
	proto.RegisterType((*Command)(nil), "tele.Command")
	proto.RegisterType((*Command_ArgReport)(nil), "tele.Command.ArgReport")
	proto.RegisterType((*Command_ArgGetState)(nil), "tele.Command.ArgGetState")
	proto.RegisterType((*Command_ArgExec)(nil), "tele.Command.ArgExec")
	proto.RegisterType((*Command_ArgSetInventory)(nil), "tele.Command.ArgSetInventory")
	proto.RegisterType((*Command_ArgSetConfig)(nil), "tele.Command.ArgSetConfig")
	proto.RegisterType((*Command_ArgSendStatus)(nil), "tele.Command.ArgSendStatus")
	proto.RegisterType((*Command_ArgShowQR)(nil), "tele.Command.ArgShowQR")
	proto.RegisterType((*Command_ArgValidateCode)(nil), "tele.Command.ArgValidateCode")
	proto.RegisterType((*Command_ArgCook)(nil), "tele.Command.ArgCook")
	proto.RegisterType((*Response)(nil), "tele.Response")
	proto.RegisterType((*WaitingForRemotePayment)(nil), "tele.WaitingForRemotePayment")
	proto.RegisterType((*FromRoboMessage)(nil), "tele.FromRoboMessage")
	proto.RegisterType((*Stock)(nil), "tele.Stock")
	proto.RegisterType((*Stock_StockItem)(nil), "tele.Stock.StockItem")
	proto.RegisterType((*Err)(nil), "tele.Err")
	proto.RegisterType((*ShowQR)(nil), "tele.ShowQR")
	proto.RegisterType((*ToRoboMessage)(nil), "tele.ToRoboMessage")
	proto.RegisterType((*RoboHardware)(nil), "tele.RoboHardware")
	proto.RegisterType((*Order)(nil), "tele.Order")
}

func init() {
	proto.RegisterFile("tele.proto", fileDescriptor_e0e7a136e24bc159)
}

var fileDescriptor_e0e7a136e24bc159 = []byte{
	// 2153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4b, 0x6f, 0x1b, 0xc9,
	0x11, 0xd6, 0xf0, 0x3d, 0x35, 0xa4, 0x35, 0x6a, 0xbf, 0x68, 0x1a, 0x4e, 0x64, 0x26, 0x5e, 0x28,
	0x32, 0x56, 0x88, 0x65, 0x67, 0xe3, 0x38, 0x8f, 0x5d, 0x8b, 0x96, 0x57, 0x82, 0xdf, 0x4d, 0x25,
	0x39, 0x12, 0xad, 0x99, 0x36, 0x35, 0xe1, 0xcc, 0x34, 0xdd, 0xd3, 0xa4, 0xc4, 0x5b, 0x80, 0x00,
	0x39, 0xe6, 0x98, 0x7f, 0x10, 0xe4, 0x94, 0x7b, 0x72, 0xcd, 0x1f, 0x08, 0x72, 0xce, 0x1f, 0x08,
	0x90, 0x3f, 0x11, 0x54, 0x77, 0xcf, 0x70, 0x28, 0xcb, 0xc6, 0x7a, 0xb1, 0xb7, 0xae, 0xea, 0xaf,
	0xaa, 0xab, 0xeb, 0xd5, 0x35, 0x03, 0xa0, 0x78, 0xcc, 0x77, 0xa6, 0x52, 0x28, 0x41, 0x6a, 0xb8,
	0xee, 0xff, 0xc3, 0x01, 0xf7, 0x30, 0x9d, 0xf3, 0x54, 0x09, 0xb9, 0x20, 0xf7, 0xa0, 0x91, 0x29,
	0x11, 0x4c, 0xb2, 0xae, 0xb3, 0x59, 0xdd, 0xf2, 0x76, 0x6f, 0xec, 0x68, 0x81, 0x02, 0xb0, 0x33,
	0xc4, 0xdd, 0x43, 0xc5, 0x13, 0x6a, 0x81, 0xbd, 0x05, 0xb8, 0x05, 0x93, 0x10, 0xa8, 0x05, 0x22,
	0xe4, 0x5d, 0x67, 0xd3, 0xd9, 0xea, 0x50, 0xbd, 0x26, 0x57, 0xa0, 0x3e, 0x67, 0xf1, 0x8c, 0x77,
	0x2b, 0x9b, 0xce, 0x56, 0x9d, 0x1a, 0x02, 0x91, 0x29, 0x4b, 0x78, 0xb7, 0xba, 0xe9, 0x6c, 0xb9,
	0x54, 0xaf, 0xc9, 0x35, 0x68, 0x9c, 0x88, 0xe9, 0x94, 0xcb, 0x6e, 0x4d, 0x43, 0x2d, 0x85, 0x7c,
	0x2d, 0xf4, 0xb6, 0x5b, 0xdf, 0x74, 0xb6, 0x2a, 0xd4, 0x52, 0xfd, 0xbf, 0x7b, 0xe0, 0x1e, 0xf1,
	0x98, 0x27, 0x5c, 0xc9, 0x05, 0xb9, 0x0c, 0xf5, 0x79, 0x32, 0x8a, 0x42, 0x7d, 0x78, 0x9d, 0xd6,
	0xe6, 0xc9, 0x61, 0x88, 0xc7, 0xa8, 0x28, 0x31, 0x67, 0x57, 0xa9, 0x5e, 0x93, 0xbb, 0x50, 0xe7,
	0x52, 0x0a, 0xa9, 0xcf, 0xf6, 0x76, 0xaf, 0x9a, 0x3b, 0x16, 0x8a, 0x76, 0xf6, 0x71, 0x93, 0x1a,
	0x0c, 0xf9, 0x1c, 0xdc, 0x28, 0xbf, 0xbd, 0x36, 0xcb, 0xdb, 0x5d, 0x3f, 0xe7, 0x14, 0xba, 0x44,
	0x90, 0x47, 0xd0, 0x49, 0x44, 0xca, 0x17, 0xa3, 0x80, 0x65, 0x27, 0xc7, 0xe2, 0x4c, 0x5b, 0x7c,
	0xc1, 0x19, 0x2f, 0x10, 0x44, 0xdb, 0x1a, 0x3b, 0x30, 0x50, 0xf2, 0x4b, 0xf0, 0x94, 0x64, 0x69,
	0xc6, 0x02, 0x15, 0x89, 0xb4, 0xdb, 0xd0, 0x92, 0x37, 0xcf, 0x4b, 0x1e, 0x2d, 0x21, 0xb4, 0x8c,
	0x27, 0x5b, 0x50, 0xcb, 0x14, 0x53, 0xdd, 0xa6, 0x96, 0xbb, 0x72, 0x5e, 0x6e, 0xa8, 0x98, 0xa2,
	0x1a, 0x41, 0x1e, 0x00, 0x18, 0x23, 0x33, 0x36, 0xe7, 0xdd, 0xd6, 0xc7, 0x2c, 0x74, 0x35, 0x70,
	0xc8, 0xe6, 0x9c, 0x3c, 0x84, 0xb6, 0xbd, 0xda, 0x09, 0x4b, 0xc7, 0xbc, 0xeb, 0x7e, 0x4c, 0xce,
	0x33, 0x37, 0xd3, 0x48, 0x72, 0x0b, 0x80, 0xa9, 0x51, 0xc6, 0xe5, 0x3c, 0x0a, 0x78, 0xd7, 0xdf,
	0x74, 0xb6, 0x5a, 0xd4, 0x65, 0x6a, 0x68, 0x18, 0xbd, 0x67, 0x50, 0xd7, 0x2e, 0xbf, 0x30, 0x7b,
	0xba, 0xd0, 0x4c, 0x78, 0x96, 0xb1, 0xb1, 0x89, 0xa1, 0x4b, 0x73, 0x12, 0xf3, 0x2a, 0x10, 0xb3,
	0x54, 0xe9, 0x30, 0x76, 0xa8, 0x21, 0x7a, 0x7f, 0xab, 0x40, 0x5d, 0x9b, 0x40, 0xbe, 0x0f, 0x9e,
	0x12, 0x8a, 0xc5, 0xa3, 0xe3, 0x28, 0x8e, 0x33, 0xab, 0x14, 0x34, 0x6b, 0x0f, 0x39, 0x4b, 0x40,
	0x20, 0xa2, 0x34, 0xd3, 0xea, 0x73, 0xc0, 0x00, 0x39, 0xe4, 0x0b, 0xa8, 0x1b, 0xd9, 0xaa, 0x2e,
	0x86, 0xcd, 0x0b, 0xaf, 0xba, 0xa3, 0x95, 0xed, 0xa7, 0x4a, 0x2e, 0xa8, 0x81, 0xa3, 0x9c, 0x51,
	0x59, 0xfb, 0x98, 0x9c, 0x3e, 0xc3, 0xca, 0x69, 0x78, 0xef, 0x21, 0xc0, 0x52, 0x19, 0xf1, 0xa1,
	0x3a, 0xe1, 0x0b, 0x6b, 0x37, 0x2e, 0x57, 0x2b, 0xa9, 0x63, 0x2b, 0xe9, 0x51, 0xe5, 0xa1, 0x83,
	0x92, 0x4b, 0x75, 0x9f, 0x24, 0xf9, 0xe7, 0x0a, 0x78, 0xa5, 0x94, 0x5a, 0x89, 0x81, 0xbb, 0x8c,
	0x81, 0x98, 0xe2, 0x2e, 0x3a, 0xa9, 0xba, 0x55, 0xa7, 0x39, 0x89, 0x7a, 0xa7, 0x12, 0x83, 0x6a,
	0x63, 0xa0, 0x09, 0xf2, 0x08, 0x2e, 0x4d, 0xd9, 0x22, 0xe1, 0xa9, 0x1a, 0x25, 0x5c, 0x9d, 0x88,
	0x50, 0x17, 0xce, 0xa5, 0xdd, 0xcb, 0xc6, 0x11, 0xaf, 0xcd, 0xde, 0x0b, 0xbd, 0x45, 0x3b, 0xd3,
	0x32, 0x49, 0x6e, 0x43, 0x3b, 0x90, 0x3c, 0x8c, 0x94, 0x0d, 0x5b, 0x5d, 0x2b, 0xf6, 0x0c, 0xcf,
	0xc4, 0x6d, 0x09, 0x31, 0x5e, 0x6e, 0x94, 0x21, 0x26, 0x72, 0x77, 0xa0, 0x9e, 0x4d, 0x79, 0x9a,
	0x17, 0xc3, 0x7b, 0x15, 0x6b, 0x76, 0x49, 0x0f, 0x5a, 0xfc, 0x8c, 0x07, 0x33, 0xc5, 0xa5, 0x2e,
	0x83, 0x2a, 0x2d, 0xe8, 0xde, 0x7f, 0x2a, 0x50, 0xc3, 0x9a, 0x41, 0x10, 0xfa, 0x66, 0x1e, 0xa9,
	0xdc, 0xa5, 0x05, 0x4d, 0x9e, 0x41, 0x07, 0xcd, 0x1c, 0x49, 0xfe, 0x3b, 0x1e, 0x28, 0x1e, 0x76,
	0x7d, 0x1d, 0xf1, 0xcf, 0x2e, 0x2a, 0x3e, 0x9d, 0x28, 0xd4, 0x02, 0x4d, 0xdc, 0xdb, 0xc7, 0x25,
	0x16, 0x2a, 0xc3, 0x0b, 0x2d, 0x95, 0x6d, 0x7c, 0x44, 0x19, 0xde, 0xf3, 0x9c, 0xb2, 0xa0, 0xc4,
	0x22, 0x37, 0xc1, 0xd5, 0xca, 0xb2, 0x78, 0x36, 0xee, 0x12, 0x63, 0x36, 0x32, 0x86, 0xf1, 0x6c,
	0xdc, 0xfb, 0x12, 0x36, 0xde, 0x33, 0xe6, 0x93, 0xb2, 0xe6, 0x4b, 0xd8, 0x78, 0xcf, 0x80, 0x4f,
	0x51, 0xd0, 0xff, 0x63, 0x0b, 0x9a, 0x03, 0x91, 0x24, 0x2c, 0x0d, 0x57, 0xa2, 0x50, 0x5f, 0x8d,
	0x02, 0xa6, 0x63, 0x2c, 0x82, 0x89, 0x8e, 0x71, 0x8b, 0xea, 0x35, 0x3e, 0x52, 0x92, 0x4f, 0x85,
	0x54, 0xba, 0x95, 0x78, 0xbb, 0xd7, 0x8d, 0x83, 0xac, 0xba, 0x9d, 0xc7, 0x72, 0x4c, 0xf5, 0xf6,
	0xc1, 0x1a, 0xb5, 0x40, 0xf2, 0x53, 0x68, 0x8d, 0xb9, 0x42, 0xc7, 0xf1, 0xee, 0x86, 0x16, 0xba,
	0xf1, 0x9e, 0xd0, 0xd7, 0x16, 0x70, 0xb0, 0x46, 0x0b, 0x30, 0xb9, 0x0b, 0x35, 0xb4, 0x45, 0x7b,
	0xb0, 0x68, 0x76, 0x25, 0xa1, 0xfd, 0x33, 0x1e, 0x1c, 0xac, 0x51, 0x0d, 0x22, 0x4f, 0xa0, 0x93,
	0x71, 0x35, 0x5a, 0xbe, 0x17, 0x97, 0xb5, 0xd4, 0xad, 0xf7, 0xa4, 0x86, 0x5c, 0x15, 0xb9, 0x78,
	0xb0, 0x46, 0xdb, 0x59, 0x89, 0x26, 0x3f, 0x07, 0x40, 0x2d, 0x81, 0x48, 0xdf, 0x46, 0xe3, 0xee,
	0x15, 0xad, 0xa2, 0x77, 0x91, 0x8a, 0x81, 0x46, 0x1c, 0xac, 0x51, 0x37, 0xcb, 0x09, 0x72, 0x0f,
	0x1f, 0x01, 0x31, 0xed, 0x5e, 0x2d, 0x3f, 0x1e, 0x2b, 0x62, 0x69, 0x88, 0x37, 0x9b, 0x65, 0x68,
	0x35, 0x42, 0xc9, 0x2e, 0x34, 0xb3, 0x13, 0x71, 0x3a, 0x7a, 0x43, 0xbb, 0xd7, 0x3e, 0xe0, 0xcf,
	0xe1, 0x89, 0x38, 0x7d, 0x43, 0xd1, 0x9f, 0x99, 0x5e, 0xe1, 0x4d, 0xe7, 0x2c, 0x8e, 0x42, 0xa6,
	0xf8, 0x48, 0xb7, 0x8b, 0xeb, 0x1f, 0xb8, 0xe9, 0x6f, 0x2c, 0x6a, 0x20, 0x42, 0x74, 0x6c, 0x7b,
	0x5e, 0xa2, 0xd1, 0xb9, 0x81, 0x10, 0x93, 0x6e, 0xf7, 0x03, 0xce, 0x1d, 0x08, 0x31, 0x41, 0x33,
	0x11, 0xd4, 0xf3, 0xc0, 0x2d, 0x22, 0xdb, 0xeb, 0x80, 0x57, 0x8a, 0x58, 0xef, 0x0e, 0x34, 0x6d,
	0x2c, 0x30, 0x99, 0xb2, 0x80, 0xa7, 0x4c, 0x46, 0xc2, 0xf6, 0xb0, 0x82, 0xee, 0x3d, 0x80, 0xf5,
	0x73, 0xce, 0x27, 0xb7, 0xa1, 0x9a, 0xf2, 0x53, 0x8d, 0xbc, 0xa0, 0x4d, 0xe0, 0x5e, 0xef, 0x01,
	0xb4, 0xcb, 0xfe, 0x2e, 0x26, 0x17, 0xa7, 0x34, 0xb9, 0xf8, 0x46, 0x0d, 0xa6, 0x79, 0xdb, 0x48,
	0xad, 0x43, 0x67, 0xc5, 0xdd, 0xbd, 0x5f, 0x68, 0xfb, 0x8d, 0x27, 0x71, 0xa2, 0x89, 0xd9, 0x42,
	0xcc, 0x94, 0xd5, 0x62, 0x29, 0x72, 0x1d, 0x9a, 0xef, 0xe4, 0x48, 0xf1, 0x33, 0x65, 0x5f, 0xbb,
	0xc6, 0x3b, 0x79, 0xc4, 0xcf, 0x54, 0xef, 0x8e, 0x36, 0xbd, 0xec, 0xcd, 0x8b, 0x3a, 0x75, 0xef,
	0xaf, 0x8e, 0xf6, 0x04, 0x3a, 0x0e, 0x3d, 0x91, 0xf0, 0x74, 0x56, 0xc2, 0x14, 0xb4, 0x7e, 0x3b,
	0x25, 0x67, 0x89, 0xb5, 0xd8, 0x10, 0xc8, 0xcd, 0x66, 0x63, 0x66, 0x06, 0xa3, 0x36, 0x35, 0x04,
	0x76, 0xff, 0x63, 0x16, 0xb3, 0x34, 0xe0, 0x76, 0x2c, 0xcb, 0xc9, 0x0b, 0xfa, 0x7c, 0xfd, 0x9b,
	0xf6, 0xf9, 0xbd, 0x06, 0xd4, 0x14, 0xcb, 0x26, 0xfd, 0x3f, 0x54, 0xa0, 0x45, 0x79, 0x36, 0x15,
	0x69, 0xa6, 0xcd, 0x32, 0x93, 0x99, 0xb9, 0xbc, 0x1d, 0xc1, 0x08, 0xd4, 0x42, 0xa6, 0x58, 0x3e,
	0x2a, 0xe2, 0x7a, 0xa5, 0x67, 0xd4, 0xce, 0xf5, 0x8c, 0x1d, 0x80, 0x20, 0x09, 0x47, 0x92, 0x4f,
	0x63, 0xb6, 0xb0, 0x26, 0xd9, 0xd0, 0x0e, 0x92, 0x90, 0x6a, 0x36, 0x75, 0x83, 0x7c, 0x49, 0xee,
	0x81, 0x87, 0x19, 0x96, 0x0b, 0x34, 0xb4, 0x80, 0x9f, 0x67, 0xa3, 0x98, 0x58, 0x09, 0x08, 0x8a,
	0x35, 0xf9, 0x0c, 0x2e, 0xe5, 0x99, 0x6c, 0x38, 0xfa, 0xa1, 0xe9, 0xd0, 0x73, 0x5c, 0xc4, 0x1d,
	0xbe, 0x3c, 0xda, 0xa7, 0x2f, 0x1f, 0x3f, 0x1f, 0x29, 0x31, 0x8d, 0x82, 0xee, 0xef, 0x7d, 0x7d,
	0x8b, 0x4e, 0xce, 0x3e, 0x42, 0x6e, 0x7f, 0x01, 0xd7, 0x7f, 0xcb, 0x22, 0x15, 0xa5, 0xe3, 0xa7,
	0x42, 0x52, 0x9e, 0x08, 0xc5, 0xad, 0xf7, 0xbe, 0xb3, 0x30, 0x5e, 0x83, 0x06, 0x4b, 0xf4, 0xbc,
	0x54, 0xd3, 0xa6, 0x5a, 0xaa, 0xff, 0x3f, 0x07, 0xd6, 0x9f, 0x4a, 0x91, 0x50, 0x71, 0x2c, 0x5e,
	0xd8, 0xd1, 0xea, 0x36, 0xd4, 0x33, 0xdd, 0x2b, 0x1d, 0xed, 0x0b, 0xcf, 0xf8, 0x42, 0xd7, 0x1a,
	0x35, 0x3b, 0x68, 0x96, 0x14, 0xc7, 0xe2, 0x68, 0x39, 0x5c, 0x17, 0x34, 0x8a, 0xbf, 0x92, 0x21,
	0xcf, 0x07, 0x6c, 0x2b, 0xae, 0x59, 0xd4, 0xec, 0x90, 0x9b, 0x50, 0xe5, 0x52, 0xda, 0x81, 0xda,
	0x35, 0x80, 0x7d, 0x29, 0x29, 0x72, 0xc9, 0x17, 0xd0, 0x46, 0x6b, 0x0e, 0x98, 0x0c, 0x4f, 0x99,
	0xe4, 0x76, 0x86, 0x26, 0x06, 0x55, 0xde, 0xa1, 0x2b, 0x38, 0x3c, 0x57, 0x7f, 0x8a, 0xd8, 0xd1,
	0xb9, 0x30, 0x5b, 0x04, 0x13, 0x6a, 0x76, 0xfa, 0x89, 0x85, 0x90, 0xcf, 0xcf, 0x7d, 0xe9, 0x5c,
	0x2d, 0x81, 0x2f, 0xf8, 0xca, 0xf9, 0xc9, 0xb7, 0xfa, 0xca, 0xe9, 0xdf, 0x87, 0xea, 0xbe, 0xfc,
	0xc4, 0xc1, 0xb6, 0xff, 0x2f, 0x07, 0x1a, 0xb6, 0x4f, 0xdc, 0x05, 0x6c, 0x00, 0x8b, 0x69, 0x1e,
	0x09, 0x5b, 0x59, 0x66, 0x77, 0xe7, 0x0d, 0xc5, 0x2d, 0x6a, 0x21, 0x18, 0x61, 0xd3, 0x2d, 0x56,
	0x7b, 0x07, 0x9e, 0x84, 0x35, 0x33, 0x54, 0xd2, 0x96, 0x50, 0x4e, 0xe6, 0x3b, 0x87, 0x36, 0x29,
	0xea, 0x34, 0x27, 0xfb, 0xcf, 0xa1, 0x61, 0xb4, 0x13, 0x0f, 0x9a, 0x51, 0xaa, 0xd3, 0xda, 0x5f,
	0x43, 0x42, 0xf2, 0x80, 0x47, 0x53, 0xe5, 0x3b, 0xc4, 0x85, 0xba, 0xc0, 0x60, 0xfa, 0x15, 0x42,
	0xe0, 0x92, 0xae, 0xd5, 0x57, 0x73, 0x2e, 0x43, 0xc9, 0xde, 0x2a, 0xbf, 0x8a, 0xdb, 0x9a, 0xe7,
	0xd7, 0xfa, 0x7f, 0x71, 0xa0, 0x73, 0x24, 0xca, 0x19, 0xf6, 0x03, 0xa8, 0x06, 0x49, 0x68, 0x6f,
	0xb5, 0x61, 0x6e, 0x65, 0xf7, 0xf4, 0x9d, 0x70, 0x97, 0x7c, 0x0f, 0x5f, 0x42, 0x39, 0xe7, 0xb2,
	0x94, 0x65, 0x25, 0x0e, 0xf9, 0x11, 0xb8, 0x09, 0x9b, 0xf0, 0x0f, 0xe6, 0xda, 0x72, 0x97, 0xfc,
	0x10, 0xec, 0xd3, 0x65, 0x53, 0xae, 0x5d, 0x76, 0x64, 0xfe, 0xac, 0xf5, 0x7f, 0xbc, 0x9a, 0x78,
	0x64, 0x13, 0x3c, 0xc5, 0x93, 0x29, 0x97, 0x4c, 0xcd, 0xa4, 0x19, 0x72, 0xeb, 0xb4, 0xcc, 0xea,
	0xff, 0xb7, 0x62, 0x73, 0x3d, 0xaf, 0xd3, 0xc1, 0xb9, 0x3a, 0x1d, 0x7c, 0x47, 0x75, 0x4a, 0xee,
	0x83, 0xa7, 0xbd, 0x6d, 0x9e, 0x13, 0xdb, 0xa5, 0x36, 0x4a, 0xd7, 0x35, 0x1b, 0xb4, 0x8c, 0x22,
	0x3f, 0x83, 0xd5, 0xb6, 0xab, 0xdb, 0xd4, 0x37, 0x1b, 0xc4, 0x7b, 0xd0, 0x12, 0xa7, 0x29, 0x97,
	0x98, 0x1c, 0x76, 0x36, 0xce, 0xe9, 0x62, 0x0f, 0x53, 0xca, 0x35, 0x77, 0xcd, 0x69, 0xfc, 0x60,
	0xd6, 0x6b, 0x9d, 0xb5, 0x50, 0x6e, 0xbe, 0xaf, 0x72, 0x36, 0x5d, 0x22, 0xc8, 0x16, 0xac, 0xe3,
	0xdc, 0x2e, 0x79, 0xa0, 0x9e, 0xcc, 0xf8, 0x13, 0x6c, 0x3a, 0x9e, 0x3e, 0xed, 0x3c, 0x7b, 0xfb,
	0x57, 0xd0, 0x7a, 0x2d, 0x23, 0x21, 0x71, 0xee, 0xf6, 0xa0, 0xf9, 0x84, 0xbf, 0x65, 0xb3, 0x58,
	0xf9, 0x6b, 0xa4, 0x09, 0xd5, 0x97, 0xe2, 0xd4, 0x77, 0xc8, 0x25, 0x80, 0xc3, 0x30, 0xe6, 0xfb,
	0xe9, 0x38, 0x4a, 0xb9, 0x5f, 0x21, 0x6d, 0x68, 0x21, 0xfd, 0xeb, 0x8c, 0x4b, 0xbf, 0xb6, 0xbd,
	0x0f, 0x6e, 0xd1, 0xfe, 0x51, 0x41, 0x2a, 0xd4, 0x49, 0x94, 0x8e, 0xfd, 0x35, 0xc4, 0xb1, 0x20,
	0xe0, 0x53, 0xc5, 0x43, 0xdf, 0x21, 0x2d, 0xa8, 0x85, 0x42, 0xcb, 0xb7, 0xa0, 0x76, 0x3c, 0xcb,
	0x16, 0x2b, 0xb9, 0xbc, 0xfd, 0x27, 0x07, 0xbf, 0xb5, 0x8a, 0x97, 0x60, 0xdd, 0x3c, 0x1e, 0x2f,
	0x0b, 0x65, 0x1d, 0x1c, 0xbc, 0xc5, 0x64, 0xa8, 0x98, 0x54, 0xc6, 0x26, 0x24, 0x9f, 0x46, 0x69,
	0x94, 0x9d, 0xf8, 0x15, 0x72, 0x05, 0x7c, 0xa4, 0x0f, 0x53, 0x3c, 0x31, 0xcb, 0xa2, 0xe3, 0x98,
	0xfb, 0x55, 0xb2, 0x81, 0xa3, 0xbf, 0x98, 0x2c, 0xcb, 0xa7, 0x96, 0xeb, 0xd1, 0x5f, 0xc6, 0x7e,
	0x1d, 0x0d, 0x9e, 0x27, 0x81, 0x36, 0xa7, 0x81, 0xc4, 0x29, 0x8b, 0xd4, 0x6b, 0xb6, 0xf0, 0x9b,
	0xdb, 0xff, 0x76, 0xb0, 0xa7, 0x61, 0x4f, 0xf6, 0xa0, 0x79, 0x58, 0x94, 0x6a, 0x0b, 0x6a, 0x7b,
	0x42, 0xa0, 0x09, 0x1e, 0x34, 0x5f, 0x8a, 0x24, 0x4a, 0x59, 0xec, 0x57, 0x08, 0x40, 0x63, 0x10,
	0x47, 0x3c, 0xc5, 0x0a, 0x05, 0x68, 0xec, 0x49, 0x31, 0xe1, 0xa9, 0x5f, 0x43, 0x90, 0xfd, 0x1e,
	0xf7, 0xeb, 0x28, 0xfb, 0x5c, 0x04, 0x13, 0x73, 0xd2, 0x6b, 0x29, 0xd0, 0x52, 0xbf, 0x49, 0xae,
	0x01, 0x39, 0x5a, 0xe6, 0xfe, 0x6b, 0x29, 0x8e, 0x63, 0x9e, 0xf8, 0x2d, 0xf4, 0xdf, 0xf0, 0x64,
	0xa6, 0x42, 0x71, 0x9a, 0xfa, 0x2e, 0xde, 0xc5, 0xbc, 0x60, 0x03, 0x91, 0x2a, 0x29, 0x62, 0x1f,
	0xc8, 0x2d, 0xb8, 0xb1, 0x7c, 0xde, 0xf6, 0xcf, 0x14, 0x97, 0x29, 0x8b, 0x6d, 0xf6, 0xf9, 0x1e,
	0xf1, 0xa1, 0x4d, 0xf9, 0xbb, 0x19, 0xcf, 0xcc, 0x38, 0xe7, 0x7f, 0xb5, 0xfd, 0x0c, 0x3a, 0x2b,
	0xc9, 0x69, 0xee, 0x90, 0xbb, 0xb8, 0x05, 0xb5, 0x01, 0xcb, 0x4e, 0x7c, 0x07, 0x4f, 0xc6, 0x55,
	0x8c, 0xf6, 0xe9, 0x78, 0x7d, 0x1d, 0xe9, 0xde, 0xe3, 0x41, 0x73, 0xcf, 0x0c, 0x29, 0x7e, 0x6d,
	0x7b, 0x0f, 0xdc, 0x22, 0xf5, 0x30, 0x5e, 0xa9, 0x28, 0x48, 0x7f, 0x0d, 0x0f, 0xc7, 0xec, 0x1c,
	0x4b, 0x96, 0xe8, 0x44, 0x71, 0xb0, 0x99, 0xbd, 0x93, 0xa8, 0xf6, 0x39, 0xcf, 0x32, 0xcd, 0xab,
	0x6c, 0xff, 0xd3, 0x01, 0xaf, 0x54, 0x65, 0x78, 0x70, 0x2a, 0xcc, 0xda, 0x5f, 0xd3, 0xed, 0x4f,
	0x4f, 0x1f, 0x91, 0x48, 0xf3, 0xc0, 0xb7, 0xa1, 0x15, 0x88, 0x64, 0x1a, 0x73, 0x85, 0xa9, 0xd4,
	0x01, 0x57, 0x94, 0x7a, 0xe3, 0x0d, 0xb8, 0x5a, 0x08, 0xac, 0xa4, 0x42, 0x0d, 0x13, 0x46, 0x57,
	0x70, 0x1e, 0xf8, 0x75, 0xf0, 0xf0, 0x61, 0x55, 0x87, 0xd9, 0x9e, 0x09, 0xfe, 0x55, 0xd8, 0x38,
	0x2d, 0x9c, 0x99, 0x3b, 0xb1, 0x89, 0x72, 0xa1, 0x18, 0xf2, 0x58, 0x7f, 0x90, 0xf9, 0x5f, 0x61,
	0x18, 0x42, 0xa1, 0xbf, 0xec, 0xdf, 0x72, 0x29, 0x79, 0xe8, 0x3f, 0xde, 0x3e, 0x04, 0xaf, 0xd4,
	0x63, 0x57, 0x3b, 0x3b, 0xe4, 0x0d, 0xd2, 0x77, 0xd0, 0xd8, 0xa2, 0x73, 0xda, 0xe6, 0x6e, 0x66,
	0x2b, 0x3b, 0x9b, 0xfb, 0xd5, 0xe3, 0x86, 0xfe, 0x87, 0x78, 0xff, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x8d, 0x15, 0x05, 0x7d, 0x51, 0x14, 0x00, 0x00,
}
